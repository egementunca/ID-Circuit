[build-system]
requires = ["setuptools>=61", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "identity-circuit-factory"
version = "1.0.0"
description = "Quantum identity circuit generation and analysis system with SAT-based synthesis"
authors = [
    {name = "ID-Circuit Team", email = "team@id-circuit.example.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Scientific/Engineering :: Mathematics",
]
keywords = ["quantum", "circuit", "synthesis", "sat", "identity", "optimization"]
dependencies = [
    "qiskit>=1.0.0",
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "python-sat>=0.1.7",
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "httpx>=0.25.0",
    "pydantic>=2.0.0",
    "colorama>=0.4.4",
    "tqdm>=4.64.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]
async = [
    "aioredis>=2.0.0",
]
performance = [
    "numba>=0.56.0",
    "cython>=0.29.0",
]

[project.scripts]
identity-factory = "identity_factory.cli:main"

[project.urls]
Homepage = "https://github.com/yourusername/ID-Circuit"
Repository = "https://github.com/yourusername/ID-Circuit"
Documentation = "https://github.com/yourusername/ID-Circuit#readme"
Issues = "https://github.com/yourusername/ID-Circuit/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["identity_factory*", "sat_revsynth*"]

[tool.setuptools.package-data]
identity_factory = ["*.py"]
sat_revsynth = ["*.py"]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | frontend-next
)/
'''

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    "frontend-next",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
# Exclude frontend and other non-Python directories
exclude = [
    "frontend-next/",
    "papers/",
    "identity_circuits_analysis/",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=identity_factory",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]